# Generated by Django 5.2.5 on 2025-08-13 10:48

import ckeditor.fields
import django.db.models.deletion
import phonenumber_field.modelfields
import shared.models.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyContacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Первый номер телефона')),
                ('secondary_phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Второй номер телефона')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Эл. почта')),
                ('addres', models.CharField(blank=True, max_length=128, verbose_name='Адрес')),
                ('work_time_text', models.CharField(blank=True, max_length=32, verbose_name='Время работы')),
            ],
            options={
                'verbose_name': 'Контакты компании',
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(help_text='Уникальный ID страницы', max_length=32, unique=True, verbose_name='Slug')),
                ('is_generic_page', models.BooleanField(default=True, help_text='✅: Будет автоматически доступно по указанному url. Используйте для страниц без логики.<br>❌: Выбирайте, когда для обработки страницы нужно использовать кастомный view.<br>Влияет на работу логики поля <code>URL path</code>', verbose_name='Это динамически-генерируемая страница?')),
                ('url_path', models.CharField(blank=True, help_text='<details><summary><code>is_generic_page</code>: ✅</summary>URL путь, по которому будет доступна страница. Указав <code>info/about-us/</code> здесь, страница будет доступна по адресу <code>$site.$domain/info/about-us/</code>.<br><b><u>Крайне рекомендуется</u></b> создавать url <u>на основе slug</u>. Например, при slug = <code>about-us</code>, url = <code>info/about-us/</code>).<br></details><details><summary><code>is_generic_page</code>: ❌</summary>Название <b>должно</b> соответствовать адресу, по которому можно перейти на страницу по кастомному view.<br>При ненахождении страницы по указанному url - сохранить изменения / создать страницу не удастся.<br></details><br>Всегда отражает реальный адрес страницы.', max_length=64, unique=True, validators=[shared.models.validators.StringStartswith('/', invert=True), shared.models.validators.StringEndswith('/')], verbose_name='URL путь')),
                ('template_name', models.CharField(help_text='Путь к файлу, включая расширение', validators=[shared.models.validators.template_with_this_name_exists], verbose_name='Название django-темплейта')),
                ('verbose_name', models.CharField(max_length=64, verbose_name='Человеко-читаемое название страницы')),
                ('html_title', models.CharField(max_length=32, verbose_name='HTML Title')),
                ('description', models.CharField(blank=True, max_length=32, verbose_name='HTML Description')),
                ('h1', models.CharField(blank=True, max_length=128, verbose_name='H1 Заголовок')),
                ('ceo_content', ckeditor.fields.RichTextField(blank=True, help_text='Основное наполнение страницы', verbose_name='CEO контент')),
            ],
            options={
                'verbose_name': 'Страница',
                'verbose_name_plural': 'Страницы',
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_favicon', models.ImageField(blank=True, upload_to='favicon', verbose_name='Favicon сайта')),
                ('robots_txt_content', models.TextField(blank=True, verbose_name='Содержимое Robots.txt')),
                ('head_script', models.TextField(blank=True, help_text='Этот текст будет вставлен в блок &ltscript&gt в &lthead&gt у каждой html-страницы сайта', verbose_name='Скрипт')),
            ],
            options={
                'verbose_name': 'Настройки сайта',
            },
        ),
        migrations.CreateModel(
            name='TelegramSendingChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token_env_name', models.CharField(help_text='Название ENV переменной с токеном этого бота.', validators=[shared.models.validators.env_variable_name], verbose_name='ENV-переменная с токеном')),
                ('chat_id', models.CharField(max_length=32, verbose_name='ID чата')),
                ('channel_specialization', models.CharField(choices=[('new_request_notifications', 'Уведомления о новых заявках'), ('logs', 'Логи')], help_text='Может быть только один канал для конкретной специализации', unique=True, verbose_name='Специализация канала')),
            ],
            options={
                'verbose_name': 'Канал отправки сообщений в Telegram',
                'verbose_name_plural': 'Каналы отправки сообщений в Telegram',
            },
        ),
        migrations.CreateModel(
            name='ExtraContext',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=64, verbose_name='Ключ')),
                ('value', models.TextField(verbose_name='Значение')),
                ('page', models.ForeignKey(blank=True, help_text='Если указать здесь страницу - ключ будет доступен через объект страницы и будет исключён из глобального контекста (global.extra_context). Тем не менее, он всё также будет доступен глобально, но уже через global.pages', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extra_context', to='core.page', verbose_name='Привязать к странице')),
            ],
            options={
                'verbose_name': 'Дополнительный контекст',
                'verbose_name_plural': 'Дополнительный контекст',
            },
        ),
    ]

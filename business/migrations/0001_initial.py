# Generated by Django 5.2.5 on 2025-09-24 10:15

import django.db.models.deletion
import mptt.fields
import pathlib
import tinymce.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Указывайте человеко-читаемый текст. По умолчанию также используется для HTML Title и H1.', max_length=64, verbose_name='Название')),
                ('slug', models.SlugField(max_length=128, unique=True)),
                ('h1_override', models.CharField(blank=True, help_text='По умолчанию для H1 используется Name.', max_length=127, verbose_name='H1 Заголовок (переопределение)')),
                ('html_title_override', models.CharField(blank=True, help_text='По умолчанию для HTML Title используется Name.', max_length=128, verbose_name='HTML Title (переопределение)')),
                ('html_description', models.CharField(blank=True, verbose_name='HTML Description')),
                ('image', models.ImageField(upload_to=pathlib.PureWindowsPath('C:/_b.VV/my-projects/TLTConvectorTraining/media/images/articles'))),
                ('content', tinymce.models.HTMLField(verbose_name='Содержимое')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Статья',
                'verbose_name_plural': 'Статьи',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Указывайте человеко-читаемый текст. По умолчанию также используется для HTML Title и H1.', max_length=64, verbose_name='Название')),
                ('slug', models.SlugField(max_length=128, unique=True)),
                ('h1_override', models.CharField(blank=True, help_text='По умолчанию для H1 используется Name.', max_length=127, verbose_name='H1 Заголовок (переопределение)')),
                ('html_title_override', models.CharField(blank=True, help_text='По умолчанию для HTML Title используется Name.', max_length=128, verbose_name='HTML Title (переопределение)')),
                ('html_description', models.CharField(blank=True, verbose_name='HTML Description')),
                ('image', models.ImageField(upload_to=pathlib.PureWindowsPath('C:/_b.VV/my-projects/TLTConvectorTraining/media/images/services'), verbose_name='Изображение')),
                ('description', tinymce.models.HTMLField(verbose_name='Описание')),
                ('summary', tinymce.models.HTMLField(help_text='Отображается на странице всех услуг в списке услуг', max_length=768, verbose_name='Краткое описание')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Указывайте человеко-читаемый текст. По умолчанию также используется для HTML Title и H1.', max_length=64, verbose_name='Название')),
                ('slug', models.SlugField(max_length=128, unique=True)),
                ('h1_override', models.CharField(blank=True, help_text='По умолчанию для H1 используется Name.', max_length=127, verbose_name='H1 Заголовок (переопределение)')),
                ('html_title_override', models.CharField(blank=True, help_text='По умолчанию для HTML Title используется Name.', max_length=128, verbose_name='HTML Title (переопределение)')),
                ('html_description', models.CharField(blank=True, verbose_name='HTML Description')),
                ('is_parent_category', models.BooleanField(default=True, help_text='✅: Можно разместить подкатегории, нельзя разместить товары.<br>❌: Можно разместить товары, нельзя разместить подкатегории.', verbose_name='Это родительская категория?')),
                ('image', models.ImageField(upload_to=pathlib.PureWindowsPath('C:/_b.VV/my-projects/TLTConvectorTraining/media/images/categories'), verbose_name='Изображение')),
                ('summary', tinymce.models.HTMLField(blank=True, help_text='Краткая информация о категории', max_length=1024, verbose_name='Краткое описание (summary)')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childrens', to='business.category', verbose_name='Родительская категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Указывайте человеко-читаемый текст. По умолчанию также используется для HTML Title и H1.', max_length=64, verbose_name='Название')),
                ('slug', models.SlugField(max_length=128, unique=True)),
                ('h1_override', models.CharField(blank=True, help_text='По умолчанию для H1 используется Name.', max_length=127, verbose_name='H1 Заголовок (переопределение)')),
                ('html_title_override', models.CharField(blank=True, help_text='По умолчанию для HTML Title используется Name.', max_length=128, verbose_name='HTML Title (переопределение)')),
                ('html_description', models.CharField(blank=True, verbose_name='HTML Description')),
                ('description', tinymce.models.HTMLField(verbose_name='Описание')),
                ('blueprint_image', models.ImageField(blank=True, upload_to=pathlib.PureWindowsPath('C:/_b.VV/my-projects/TLTConvectorTraining/media/images/products/blueprints'), verbose_name='Чертёж')),
                ('additional_elements_description', tinymce.models.HTMLField(blank=True, verbose_name='Описание в разделе дополнительных элементов и комплектации')),
                ('sub_models_table', tinymce.models.HTMLField(blank=True, help_text='Создайте и заполните HTML таблицу с под-моделями товара', verbose_name='Таблица под-моделей товара')),
                ('category', models.ForeignKey(limit_choices_to={'is_parent_category': False}, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='business.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='ProductAdditionalElements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, verbose_name='Наименование')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_elements', to='business.product')),
            ],
            options={
                'verbose_name': 'Дополнительный элемент товара',
                'verbose_name_plural': 'Дополнительные элементы товара',
            },
        ),
        migrations.CreateModel(
            name='ProductCharacteristicType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Название типа характеристики')),
                ('unit_of_measurement', models.CharField(blank=True, help_text='Например: "мм", "лет", "МПа", "C°" и так далее. Можно оставить пустым.', max_length=24, verbose_name='Единицы измерения')),
            ],
            options={
                'verbose_name': 'Тип характеристики',
                'verbose_name_plural': 'Типы характеристик',
                'ordering': ['name', 'unit_of_measurement'],
                'unique_together': {('name', 'unit_of_measurement')},
            },
        ),
        migrations.CreateModel(
            name='ProductPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=pathlib.PureWindowsPath('C:/_b.VV/my-projects/TLTConvectorTraining/media/images/products/photos'), verbose_name='Изображение')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='business.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Изображение товара',
                'verbose_name_plural': 'Изображения товара',
            },
        ),
        migrations.CreateModel(
            name='PerformedServiceExample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=pathlib.PureWindowsPath('C:/_b.VV/my-projects/TLTConvectorTraining/media/images/services/examples'), verbose_name='Изображение')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='examples', to='business.service', verbose_name='Услуга')),
            ],
            options={
                'verbose_name': 'Пример выполненой услуги',
                'verbose_name_plural': 'Примеры выполненой услуги',
            },
        ),
        migrations.CreateModel(
            name='ProductCharacteristic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=24, verbose_name='Значение')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='characteristics', to='business.product', verbose_name='Продукт')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='business.productcharacteristictype', verbose_name='Тип')),
            ],
            options={
                'verbose_name': 'Характеристика товара',
                'verbose_name_plural': 'Характеристики товара',
                'unique_together': {('product', 'type')},
            },
        ),
        migrations.CreateModel(
            name='ServiceAdvantage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Название')),
                ('description', tinymce.models.HTMLField(verbose_name='Описание')),
                ('image', models.ImageField(max_length=200, upload_to=pathlib.PureWindowsPath('C:/_b.VV/my-projects/TLTConvectorTraining/media/images/services/advantages'), verbose_name='Изображение')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advantages', to='business.service', verbose_name='Услуга')),
            ],
            options={
                'verbose_name': 'Преимущество услуги',
                'verbose_name_plural': 'Преимущества услуги',
                'unique_together': {('service', 'name')},
            },
        ),
    ]
